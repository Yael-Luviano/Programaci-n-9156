# -*- coding: utf-8 -*-
"""Práctica 1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18TdQ0AsPL68j9tAMlTfDpsY-bC6ne2WD
"""

#Practica 1. Programación Grupo 9156
#Alumno1: Romero Vázquez Angel Eladio (424037941) #Alumno2: Luviano Real Jose Yael (321013725)
#La presente práctica tiene por objetivo determinar si una cadena dada consiste en ser una expresión de paréntesis bien formados o no lo es.
#Cabe mencionar que nuestro alfabeto solo puede estar compuesto por caracteres del tipo paréntesis "()".
#Destacar que el pensamiento, escritura, ejecución y lectura de la práctica está fundamentada en un modelo funcional del lenguaje Python.
#Código:
def s(c): #Definimos a la función "s de caracteres"
  alf = {'(',')'} #Definimos nuestro alfabeto
  i = 0
  for caracter in c: #Metemos al ciclo for los caracteres
        if caracter not in alf: #Condicionamos el alfabeto
            return False, print("El carácter que ingresaste no es valido") #Definimos el booleano
        if caracter == '(': #Definimos el parentesis de apertura
            i += 1
        elif caracter == ')': #Definimos el parentesis de cierre
            if i <= 0:
                return False, print("Hay un paréntesis de cierre sin un paréntesis de apertura correspondiente") #Definimos el booleano
            i -= 1
  return i == 0
s('')